name: release-dart

on:
  push:
    branches:
      - ci-pub-dart
    tags:
      - 'dart-v[0-9]+.[0-9]+.[0-9]+*' # tag-pattern on pub.dev: 'v{{version}}'

  workflow_dispatch:

concurrency:
  group: release-dart-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sherpa_onnx_linux:
    if: false
    permissions:
      id-token: write # Required for authentication using OIDC
    name: sherpa_onnx_linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: stable
          version: latest

      - uses: dart-lang/setup-dart@v1

      - name: Fix version
        shell: bash
        run: |
          SHERPA_ONNX_VERSION=$(grep "SHERPA_ONNX_VERSION" ./CMakeLists.txt  | cut -d " " -f 2  | cut -d '"' -f 2)

          src_dir=$PWD/flutter/sherpa_onnx_linux
          pushd $src_dir
          v="version: $SHERPA_ONNX_VERSION"
          echo "v: $v"
          sed -i.bak s"/^version: .*/$v/" ./pubspec.yaml
          rm *.bak
          git status
          git diff

      - name: Copy extra files
        shell: bash
        run: |
          dst=flutter/sherpa_onnx_linux

          mkdir $dst/example

          cp -v flutter/sherpa_onnx/example/* $dst/example
          cp -v LICENSE $dst/
          cp -v CHANGELOG.md $dst/

          git status

      - name: Build sherpa-onnx
        uses: addnab/docker-run-action@v3
        with:
            image: quay.io/pypa/manylinux2014_x86_64
            options: |
              --volume ${{ github.workspace }}/:/home/runner/work/sherpa-onnx/sherpa-onnx
            shell: bash
            run: |
              uname -a
              gcc --version
              cmake --version
              cat /etc/*release
              id
              pwd

              cd /home/runner/work/sherpa-onnx/sherpa-onnx

              mkdir build
              cd build

              cmake \
                -D SHERPA_ONNX_ENABLE_PORTAUDIO=OFF \
                -D SHERPA_ONNX_ENABLE_TTS=ON \
                -D CMAKE_BUILD_TYPE=Release \
                -D BUILD_SHARED_LIBS=ON \
                -D CMAKE_INSTALL_PREFIX=./install \
                -D SHERPA_ONNX_ENABLE_JNI=OFF \
                -D SHERPA_ONNX_ENABLE_BINARY=OFF \
                ..

              make -j2
              make install

              ls -lh ./install/lib

      - name: Copy pre-built libs
        shell: bash
        run: |
          cp -v build/install/lib/lib*.so* flutter/sherpa_onnx_linux/linux/
          pushd flutter/sherpa_onnx_linux/linux/

          rm libonnxruntime.so
          ln -s libonnxruntime.so.* ./libonnxruntime.so

          rm libpiper_phonemize.so.1
          rm libpiper_phonemize.so

          ln -s libpiper_phonemize.so.1.2.0 libpiper_phonemize.so.1
          ln -s libpiper_phonemize.so.1 libpiper_phonemize.so

          popd

          mv -v flutter/sherpa_onnx_linux /tmp/to_be_published

          ls -lh /tmp/to_be_published/linux

      - name: Release
        shell: bash
        run: |
          cd /tmp/to_be_published
          flutter pub get
          flutter pub publish --dry-run
          flutter pub publish --force

  sherpa_onnx_macos:
    permissions:
      id-token: write # Required for authentication using OIDC
    name: sherpa_onnx_macos
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-flutter-release-package

      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: stable
          version: latest

      - uses: dart-lang/setup-dart@v1

      - name: Fix version
        shell: bash
        run: |
          SHERPA_ONNX_VERSION=$(grep "SHERPA_ONNX_VERSION" ./CMakeLists.txt  | cut -d " " -f 2  | cut -d '"' -f 2)

          src_dir=$PWD/flutter/sherpa_onnx_macos
          pushd $src_dir
          v="version: $SHERPA_ONNX_VERSION"
          echo "v: $v"
          sed -i.bak s"/^version: .*/$v/" ./pubspec.yaml
          rm *.bak
          git status
          git diff

      - name: Copy extra files
        shell: bash
        run: |
          dst=flutter/sherpa_onnx_macos

          mkdir $dst/example

          cp -v flutter/sherpa_onnx/example/* $dst/example
          cp -v LICENSE $dst/
          cp -v CHANGELOG.md $dst/

          git status

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build
          cd build
          cmake \
            -D SHERPA_ONNX_ENABLE_PORTAUDIO=OFF \
            -D SHERPA_ONNX_ENABLE_TTS=ON \
            -D CMAKE_BUILD_TYPE=Release \
            -D BUILD_SHARED_LIBS=ON \
            -D CMAKE_INSTALL_PREFIX=./install \
            -D SHERPA_ONNX_ENABLE_JNI=OFF \
            -D SHERPA_ONNX_ENABLE_BINARY=OFF \
            -D CMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
            ..

      - name: Build sherpa-onnx
        shell: bash
        run: |
          cd build
          make -j install

          ls -lh install/lib/libsherpa-onnx-core.dylib
          file install/lib/libsherpa-onnx-core.dylib

      - name: Copy pre-built libs
        shell: bash
        run: |
          cp -v build/install/lib/lib*.dylib* flutter/sherpa_onnx_macos/macos/
          pushd flutter/sherpa_onnx_macos/macos/

          rm libonnxruntime.dylib
          ln -s libonnxruntime.1.*.dylib ./libonnxruntime.dylib

          rm libpiper_phonemize.1.dylib
          rm libpiper_phonemize.dylib

          ln -s libpiper_phonemize.1.2.0.dylib libpiper_phonemize.1.dylib
          ln -s libpiper_phonemize.1.dylib libpiper_phonemize.dylib

          ls -lh

          popd

          mv -v flutter/sherpa_onnx_macos /tmp/to_be_published

          ls -lh /tmp/to_be_published/macos

      - name: Release
        shell: bash
        run: |
          cd /tmp/to_be_published
          flutter pub get
          flutter pub publish --dry-run
          flutter pub publish --force
